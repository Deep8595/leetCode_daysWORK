//Write a program to implement stack using array with operation like push and pop??
//write a program to implement stack using list to merge and sort the list??
//Ans1)
 class Stack{
// Check the few lines in this code....
    
     int max = 1000;
        int top ;
        int a[] = new int[max];
        boolean isEmpty(){
            return(top < 0);
        }
        void Stack_had(){
            top = -1;
        }
        boolean push(int x){
            if(top >= (max-1)){
                System.out.println("Stack is overflow");
                return false;
            }
            else{
                a[++top] = x;
                System.out.println(a +" is push to the top");
            }
            
        }
        boolean pop(int x){
            if( top < 0){
                system.out.println("Stack is underflow");
                return false;
            }
            else{
                x = a[top--];
                return x;
            }
        }
        
        int peek(){
            if(top < 0){
                System.out.println("Stack is empty");
                return 0;
            }
            else{
                int x = a[top];
                return x;
                
            }
        }
        void print(){
            for(i = top ; i <-1 ; i--){
                System.out.println(" " + a[i]);
            }
        }
    
}
    
    public class Main()
    {
        
    public static void main(String[] args){
        
      Stack m = new Stack();
        
        s.push(2);
        s.push(4);
       s.push(6);
        
    
        
    
    }
    }
    
Ans2)
   import java.util.*;

public class Main {
    public static void main(String[] args) {
        int arr1[] = {5,7,9};
        int n1 = arr1.length;

        int arr2[] = {4,6,8};
        int n2 = arr2.length;

        int arr3[] = new int[n1 + n2];
        mergeArrays(arr1, arr2, n1, n2, arr3);

        System.out.println("Array after merging");
        for (int i=0; i < n1+n2; i++)
            System.out.print(arr3[i] + " ");
            
    }
    
    public static void mergeArrays(int[] arr1, int[] arr2, int n1, int n2, int[] arr3){
        int i = 0;  
        int j = 0;  
        int k = 0;  
        while(i < n1){   
         arr3[k++] = arr1[i++];   
        }
        while(j < n2){   
         arr3[k++] = arr2[j++];   
        }
        Arrays.sort(arr3);   
    }
}
